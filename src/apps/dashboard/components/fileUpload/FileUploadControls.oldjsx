/*
 * This file is part of FamilyDAM Project.
 *
 *     The FamilyDAM Project is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     The FamilyDAM Project is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with the FamilyDAM Project.  If not, see <http://www.gnu.org/licenses/>.
 */

/** @jsx React.DOM */
// Renders the todo list as well as the toggle all button
// Used in TodoApp
var React = require('react');
var proj4 = require('proj4');
var GeoPoint = require('./../../assets/js/GeoPoint');
var TokenField = require('bootstrap-tokenfield');


var FileUploadControls = React.createClass({


    getDefaultProps: function(){
        return {}
    },

    getInitialState: function(){
        return {}
    },

    componentWillMount: function() {

    },

    componentDidMount: function(){
        var _options = {
            'showCaption':false,
            'showPreview':true,
            'showRemove':true,
            'showUpload':true,
            'overwriteInitial':false,
            'uploadAsync':false,
            'maxFileSize':0,
            'dropZoneEnabled':true,
            'dropZoneTitle':'Drag & drop files here &hellip;',
            'browseLabel':'Browse &hellip;',
            'previewFileType':'any',
            'layoutTemplates': {
                main1: '{preview}\n' +
                '<div class="kv-upload-progress hide"></div>\n' +
                '<div class="input-group {class}">\n' +
                '   {caption}\n' +
                '   <div class="input-group-btn">\n' +
                '       {browse}\n' +
                '       {remove}\n' +
                '       {cancel}\n' +
                '       {upload}\n' +
                '   </div>\n' +
                '</div>',
                main2: '{preview}\n<div class="kv-upload-progress hide"></div>\n{remove}\n{cancel}\n{upload}\n{browse}\n',
                preview: '<div class="file-preview {class}">\n' +
                '    <div class="close fileinput-remove">&times;</div>\n' +
                '    <div class="{dropClass}">\n' +
                '    <div class="file-preview-thumbnails">\n' +
                '    </div>\n' +
                '    <div class="clearfix"></div>' +
                '    <div class="file-preview-status text-center text-success"></div>\n' +
                '    <div class="kv-fileinput-error"></div>\n' +
                '    </div>\n' +
                '</div>',
                icon: '<span class="glyphicon glyphicon-file kv-caption-icon"></span>',
                caption: '<div tabindex="-1" class="form-control file-caption {class}">\n' +
                '   <span class="file-caption-ellipsis">&hellip;</span>\n' +
                '   <div class="file-caption-name"></div>\n' +
                '</div>',
                modal: '<div id="{id}" class="modal fade">\n' +
                '  <div class="modal-dialog modal-lg">\n' +
                '    <div class="modal-content">\n' +
                '      <div class="modal-header">\n' +
                '        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n' +
                '        <h3 class="modal-title">Detailed Preview <small>{title}</small></h3>\n' +
                '      </div>\n' +
                '      <div class="modal-body">\n' +
                '        <textarea class="form-control" style="font-family:Monaco,Consolas,monospace; height: {height}px;" readonly>{body}</textarea>\n' +
                '      </div>\n' +
                '    </div>\n' +
                '  </div>\n' +
                '</div>',
                progress: '<div class="progress">\n' +
                '    <div class="{class}" role="progressbar" aria-valuenow="{percent}" aria-valuemin="0" aria-valuemax="100" style="width:{percent}%;">\n' +
                '        {percent}%\n' +
                '     </div>\n' +
                '</div>',
                footer: '<div class="file-thumbnail-footer">\n' +
                '    <div class="file-caption-name" style="width:{width}">{caption}</div>\n' +
                '    {actions}\n' +
                '</div>',
                actions: '<div class="file-actions">\n' +
                '    <div class="file-footer-buttons">\n' +
                '        {upload}{delete}{other}' +
                '    </div>\n' +
                '    <div class="file-upload-indicator" tabindex="-1" title="{indicatorTitle}">{indicator}</div>\n' +
                '    <div class="clearfix"></div>\n' +
                '</div>',
                actionDelete: '<button type="button" class="kv-file-remove {removeClass}" title="{removeTitle}"{dataUrl}{dataKey}>{removeIcon}</button>\n',
                actionUpload: '<button type="button" class="kv-file-upload {uploadClass}" title="{uploadTitle}">{uploadIcon}</button>\n'
            }
        };
        
        
        $(this.refs.fileInputField.getDOMNode()).fileinput(_options);
        $(this.refs.folderInputField.getDOMNode()).fileinput(_options);

        $(this.refs.fileInputField.getDOMNode()).on('filebatchselected', function(event, files) {
            console.log('File batch selected triggered');
        });
        $(this.refs.folderInputField.getDOMNode()).on('filebatchselected', function(event, files) {
            console.log('Folder batch selected triggered');
        });
    },


    render: function() {
        var _this = this;


        return (
            <div className="FileUploadControls" >
                <input type="file" ref="fileInputField" multiple="true"/>
                <input type="file" ref="folderInputField" webkitdirectory directory multiple="true"/>
            </div>
        )
    }

});

module.exports = FileUploadControls;
